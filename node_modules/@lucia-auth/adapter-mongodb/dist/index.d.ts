import type { Adapter, DatabaseSession, RegisteredDatabaseSessionAttributes, DatabaseUser, RegisteredDatabaseUserAttributes, UserId } from "lucia";
import { Collection } from "mongodb";
interface UserDoc extends RegisteredDatabaseUserAttributes {
    _id: UserId;
    __v?: any;
}
interface SessionDoc extends RegisteredDatabaseSessionAttributes {
    _id: string;
    __v?: any;
    user_id: UserId;
    expires_at: Date;
}
export declare class MongodbAdapter implements Adapter {
    private Session;
    private User;
    constructor(Session: Collection<SessionDoc>, User: Collection<UserDoc>);
    deleteSession(sessionId: string): Promise<void>;
    deleteUserSessions(userId: UserId): Promise<void>;
    getSessionAndUser(sessionId: string): Promise<[session: DatabaseSession | null, user: DatabaseUser | null]>;
    getUserSessions(userId: UserId): Promise<DatabaseSession[]>;
    setSession(session: DatabaseSession): Promise<void>;
    updateSessionExpiration(sessionId: string, expiresAt: Date): Promise<void>;
    deleteExpiredSessions(): Promise<void>;
}
export {};
